#include <dt-bindings/zmk/matrix_transform.h>
#include "ndrl-layouts.dtsi"

/ {
    kscan0: kscan0 {
        compatible = "zmk,kscan-gpio-matrix";
        diode-direction = "col2row";
        wakeup-source;

        col-gpios
            = <&gpio0  6 GPIO_ACTIVE_HIGH>   // column 0
            , <&gpio0  8 GPIO_ACTIVE_HIGH>   // column 1
            , <&gpio0 17 GPIO_ACTIVE_HIGH>  // column 2
            , <&gpio0 20 GPIO_ACTIVE_HIGH>  // column 3
            , <&gpio0 22 GPIO_ACTIVE_HIGH>  // column 4
            , <&gpio0 31 GPIO_ACTIVE_HIGH>  // column 5
            , <&gpio0 29 GPIO_ACTIVE_HIGH>   // column 6
            , <&gpio0  2 GPIO_ACTIVE_HIGH>  // column 7
            , <&gpio1 15 GPIO_ACTIVE_HIGH>   // column 8
            , <&gpio1 13 GPIO_ACTIVE_HIGH>   // column 9
            ;            

        row-gpios
            = <&gpio0 24 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 0
            , <&gpio1 00 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 1
            , <&gpio0 11 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 2
            , <&gpio1 04 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 3
            , <&gpio1 06 (GPIO_ACTIVE_HIGH | GPIO_PULL_DOWN)> // row 4
            ;
    };

    matrix_scan {
        compatible = "zmk,matrix-scan";
        diode-direction = "col2row";
        wakeup-source;

        matrix_in: matrix-transform {
            compatible = "zmk,matrix-transform";
            columns = <10>;
            rows = <5>;

            map = <
                RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
                RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
                RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
                RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
                RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9)
            >;
        };

        cols = <
            &pro_micro_a0 &pro_micro_a1 &pro_micro_a2 &pro_micro_a3 &pro_micro_a4
            &pro_micro_a5 &pro_micro_b0 &pro_micro_b1 &pro_micro_b2 &pro_micro_b3
        >;

        rows = <
            &pro_micro_d4 &pro_micro_d5 &pro_micro_d6 &pro_micro_d7 &pro_micro_d8
        >;
    };
};

&pro_micro {
    status = "okay";
};

&pro_micro {
    status = "okay";
};

/ {
    default_transform: keymap_transform_0 {
        compatible = "zmk,matrix-transform";
        columns = <10>;
        rows = <5>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4) RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4) RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4) RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4) RC(3,5) RC(3,6) RC(3,7) RC(3,8) RC(3,9)
            RC(4,0) RC(4,1) RC(4,2) RC(4,3) RC(4,4) RC(4,5) RC(4,6) RC(4,7) RC(4,8) RC(4,9)
        >;
    };
};

&pro_micro {
    status = "okay";
};

/ {
    matrix_scan {
        compatible = "zmk,matrix-scan";

        diode-direction = "col2row";
        wakeup-source;

        cols = <
            &pro_micro_a0 &pro_micro_a1 &pro_micro_a2 &pro_micro_a3 &pro_micro_a4
            &pro_micro_a5 &pro_micro_b0 &pro_micro_b1 &pro_micro_b2 &pro_micro_b3
        >;

        rows = <
            &pro_micro_d4 &pro_micro_d5 &pro_micro_d6 &pro_micro_d7 &pro_micro_d8
        >;
    };
};
